#define S1 A0
#define S2 A1
#define S3 A2
#define S4 A3
#define S5 A4

#define L1 5
#define L2 6
#define L3 9
#define L4 10
#define L5 11
#define L6 2
#define L7 3
#define L8 4
#define L9 7
#define L10 8

struct SensorPacket {
  int s1 = 0;
  int s2 = 0;
  int s3 = 0;
  int s4 = 0;
  int s5 = 0;
} outpkt;

struct ActuatorPacket {
  int pwm1 = 0;
  int pwm2 = 50;
  int pwm3 = 100;
  int pwm4 = 150;
  int pwm5 = 200;
  int pwm6 = 0;
  int pwm7 = 0;
  int pwm8 = 0;
  int pwm9 = 0;
  int pwm10 = 0;
} inpkt;

byte numRead;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial.setTimeout(2000);
  while (!Serial);
  Serial.println("ON");

  numRead = sizeof(int);
}

void loop() {
  // put your main code here, to run repeatedly:
  if (Serial.available() > 0) {
      numRead = Serial.readBytes((byte *) &inpkt, sizeof(inpkt));
      sendResponse();
      updateActuators();
  }

  updateSensors();
}

void sendResponse() {
    String data = (String) outpkt.s1 + "," + outpkt.s2 + "," + outpkt.s3 + "," + outpkt.s4 + "," + outpkt.s5;
//    String data = (String) numRead;
    Serial.println(data);
}

void updateSensors() {
  delay(5);
  outpkt.s1 = analogRead(S1);
  delay(5);
  outpkt.s1 = analogRead(S1);
  delay(5);
  outpkt.s2 = analogRead(S2);
  delay(5);
  outpkt.s2 = analogRead(S2);
  delay(5);
  outpkt.s3 = analogRead(S3);
  delay(5);
  outpkt.s3 = analogRead(S3);
  delay(5);
  outpkt.s4 = analogRead(S4);
  delay(5);
  outpkt.s4 = analogRead(S4);
  delay(5);
  outpkt.s5 = analogRead(S5);
  delay(5);
  outpkt.s5 = analogRead(S5);
}

void updateActuators() {
  analogWrite(L1, inpkt.pwm1);
  analogWrite(L2, inpkt.pwm2);
  analogWrite(L3, inpkt.pwm3);
  analogWrite(L4, inpkt.pwm4);
  analogWrite(L5, inpkt.pwm5);
  digitalWrite(L6, thresholdPWM(inpkt.pwm6));
  digitalWrite(L7, thresholdPWM(inpkt.pwm7));
  digitalWrite(L8, thresholdPWM(inpkt.pwm8));
  digitalWrite(L9, thresholdPWM(inpkt.pwm9));
  digitalWrite(L10, thresholdPWM(inpkt.pwm10));
}

byte thresholdPWM(byte val) {
  return (val > 125);
}
